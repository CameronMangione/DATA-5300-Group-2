mutate(delay_bin = case_when(
dep_delay <= 15 ~ "1-15 min",
dep_delay <= 30 ~ "16-30 min",
dep_delay <= 60 ~ "31-60 min",
dep_delay <= 120 ~ "61-120 min",
dep_delay > 120 ~ "Over 121 min"
)) %>%
count(delay_bin)
max_count <- max(delays_binned$n)
ggplot(delays_binned, aes(x = delay_bin, y = n, fill = delay_bin)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = n), vjust = -0.3, size = 5, fontface = "bold") +
scale_y_continuous(expand = expansion(mult = c(0, 0.15))) + # more padding
labs(title = "Number of Flights Delayed By Range",
x = "Delay Range (minutes)",
y = "Number of Delayed Flights") +
annotate(
"text",
x = 3, # center (choose appropriate position)
y = max_count * 1.18, # above the tallest bar
label = paste("Total Minutes Delayed:", format(total_minutes_delayed, big.mark = ",")),
size = 6, hjust = 0.5, fontface = "bold"
)
total_minutes_delayed <- sum(merged$dep_delay[merged$dep_delay > 0], na.rm = TRUE)
merged %>%
filter(dep_delay > 0) %>%
mutate(delay_bin = case_when(
dep_delay <= 15 ~ "1-15 min",
dep_delay <= 30 ~ "16-30 min",
dep_delay <= 60 ~ "31-60 min",
dep_delay <= 120 ~ "61-120 min",
dep_delay > 120 ~ "Over 121 min"
)) %>%
count(delay_bin) %>%
ggplot(aes(x = delay_bin, y = n, fill = delay_bin)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = n), vjust = -0.3, size = 5, fontface = "bold") +
scale_y_continuous(expand = expansion(mult = c(0, 0.15))) + # Add 15% padding above bars
labs(title = "Number of Flights Delayed By Range",
x = "Delay Range (minutes)",
y = "Number of Delayed Flights")
total_minutes_delayed <- sum(merged$dep_delay[merged$dep_delay > 0], na.rm = TRUE)
print(total_minutes_delayed)
total_minutes_delayed <- sum(merged$dep_delay[merged$dep_delay > 0], na.rm = TRUE)
merged %>%
filter(dep_delay > 0) %>%
mutate(delay_bin = case_when(
dep_delay <= 15 ~ "1-15 min",
dep_delay <= 30 ~ "16-30 min",
dep_delay <= 60 ~ "31-60 min",
dep_delay <= 120 ~ "61-120 min",
dep_delay > 120 ~ "Over 121 min"
)) %>%
count(delay_bin) %>%
ggplot(aes(x = delay_bin, y = n, fill = delay_bin)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = n), vjust = -0.3, size = 5, fontface = "bold") +
scale_y_continuous(expand = expansion(mult = c(0, 0.15))) + # Add 15% padding above bars
labs(title = "Number of Flights Delayed By Range",
x = "Delay Range (minutes)",
y = "Number of Delayed Flights")
hours <- total_minutes_delayed / 60
days <- hours / 24
years <- days / 365
cat("That's over", round(hours), "hours, or ~", round(days), "days of cumulative delays!")
cat("\nPut together, that's almost", round(years, 1), "years of passenger time lost!")
total_minutes_delayed <- sum(merged$dep_delay[merged$dep_delay > 0], na.rm = TRUE)
merged %>%
filter(dep_delay > 0) %>%
mutate(delay_bin = case_when(
dep_delay <= 15 ~ "1-15 min",
dep_delay <= 30 ~ "16-30 min",
dep_delay <= 60 ~ "31-60 min",
dep_delay <= 120 ~ "61-120 min",
dep_delay > 120 ~ "Over 121 min"
)) %>%
count(delay_bin) %>%
ggplot(aes(x = delay_bin, y = n, fill = delay_bin)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = n), vjust = -0.3, size = 5, fontface = "bold") +
scale_y_continuous(expand = expansion(mult = c(0, 0.15))) + # Add 15% padding above bars
labs(title = "Number of Flights Delayed By Range",
x = "Delay Range (minutes)",
y = "Number of Delayed Flights")
hours <- total_minutes_delayed / 60
days <- hours / 24
years <- days / 365
cat("Total Number of Minutes", total_minutes_delayed)
cat("That's over", round(hours), "hours, or ~", round(days), "days of cumulative delays!")
cat("\nPut together, that's almost", round(years, 1), "years of passenger time lost!")
total_minutes_delayed <- sum(merged$dep_delay[merged$dep_delay > 0], na.rm = TRUE)
merged %>%
filter(dep_delay > 0) %>%
mutate(delay_bin = case_when(
dep_delay <= 15 ~ "1-15 min",
dep_delay <= 30 ~ "16-30 min",
dep_delay <= 60 ~ "31-60 min",
dep_delay <= 120 ~ "61-120 min",
dep_delay > 120 ~ "Over 121 min"
)) %>%
count(delay_bin) %>%
ggplot(aes(x = delay_bin, y = n, fill = delay_bin)) +
geom_col(show.legend = FALSE) +
geom_text(aes(label = n), vjust = -0.3, size = 5, fontface = "bold") +
scale_y_continuous(expand = expansion(mult = c(0, 0.15))) + # Add 15% padding above bars
labs(title = "Number of Flights Delayed By Range",
x = "Delay Range (minutes)",
y = "Number of Delayed Flights")
hours <- total_minutes_delayed / 60
days <- hours / 24
years <- days / 365
cat("Total Number of Minutes", total_minutes_delayed)
cat("\n
That's over", round(hours), "hours, or ~", round(days), "days of cumulative delays!")
cat("\nPut together, that's almost", round(years, 1), "years of passenger time lost!")
merged_timeofyear_clean <- merged %>%
filter(!is.na(visib))
ggplot(data = merged_timeofyear_clean, aes(x = visib, y = dep_delay))+
geom_point(alpha = 0.7)
merged_timeofyear_clean <- merged %>%
filter(!is.na(time_of_year))
merged_timeofyear_clean <- merged %>%
filter(!is.na(time_of_year))
merged_timeofyear_clean <- merged
ggplot(data = merged_timeofyear_clean, aes(x = visib, y = dep_delay))+
geom_point(alpha = 0.7)
merged_timeofyear_clean <- merged
ggplot(data = merged_timeofyear_clean, aes(x = month, y = dep_delay))+
geom_point(alpha = 0.7)
merged_timeofyear_clean <- merged
ggplot(data = merged_timeofyear_clean, aes(x = factor(month), y = dep_delay))+
geom_point(alpha = 0.7)
library(dplyr)
library(ggplot2)
library(nycflights13)
library(readr)
library(curl)
library(tidyr)
library(fivethirtyeight)
library(tidyverse)
library(resampledata3)
library(moderndive)
library(readxl)
weather
flights
flights_ua <- flights %>%
filter(carrier == "UA") %>%
filter(!is.na(dep_delay))
glimpse(flights_ua)
weather_clean <- weather %>%
filter(!is.na(wind_speed)) %>%
filter(!is.na(temp)) %>%
filter(!is.na(visib)) %>%
filter(!is.na(precip))
glimpse(weather_clean)
merged <- flights_ua %>%
inner_join(weather_clean, by = c("year", "month", "day", "hour", "origin"))
glimpse(merged)
merged <- merged %>%
mutate(late = dep_delay > 0)
glimpse(merged)
ggplot(data = merged, aes(x = temp, y = dep_delay))+
geom_point(alpha = 0.7)
ggplot(data = merged, aes(x = wind_speed, y = dep_delay))+
geom_point(alpha = 0.7)
ggplot(data = merged, aes(x = precip, y = dep_delay))+
geom_point(alpha = 0.7)
ggplot(data = merged, aes(x = visib, y = dep_delay))+
geom_point(alpha = 0.7)
merged_precip <- merged %>%
filter(precip > 0)
glimpse(merged_precip)
observed <- mean(merged_precip$precip[merged_precip$late == TRUE]) - mean(merged_precip$precip[merged_precip$late == FALSE])
N <- 10^4-1
sample.size = nrow(merged_precip)
group.1.size = nrow(merged_precip[merged_precip$late == TRUE,])
result <- numeric(N)
for (i in 1:N)
{
index = sample(sample.size, size = group.1.size, replace=FALSE)
result[i] = mean(merged_precip$precip[index]) - mean(merged_precip$precip[-index])
}
ggplot(data = tibble(result), aes(x = result))+
geom_histogram() +
geom_vline(xintercept = observed, color = "red")
observed
2*(sum(result >= observed) +1) / (N+1)
merged_visib <- merged %>%
filter(visib < 10)
glimpse(merged_visib)
observed <- mean(merged_visib$visib[merged_visib$late == TRUE]) - mean(merged_visib$visib[merged_visib$late == FALSE])
N <- 10^4-1
sample.size = nrow(merged_visib)
group.1.size = nrow(merged_visib[merged_visib$late == TRUE,])
result <- numeric(N)
for (i in 1:N)
{
index = sample(sample.size, size = group.1.size, replace=FALSE)
result[i] = mean(merged_visib$visib[index]) - mean(merged_visib$visib[-index])
}
ggplot(data = tibble(result), aes(x = result))+
geom_histogram() +
geom_vline(xintercept = observed, color = "red")
observed
2*(sum(abs(result) >= observed) +1) / (N+1)
average_delay_by_hour <- merged %>%
group_by(hour) %>%
summarize(avg_dep_delay = mean(dep_delay, na.rm = TRUE))
ggplot(average_delay_by_hour, aes(x = hour, y = avg_dep_delay)) +
geom_line() +
geom_point() +
labs(title = "Average Departure Delay by Hour of Day",
x = "Hour of Day",
y = "Average Departure Delay (minutes)")
flights_hourly <- merged %>%
group_by(hour) %>%
summarize(
total_flights = n(),
dc_count = sum(late),
dc_percentage = (dc_count / total_flights) * 100)
flights_hourly_dc
ggplot(data = merged_clean, aes(x = factor(month), fill = late)) +
geom_bar() +
labs(title = "Number of Late Flights by Month",
x = "Month",
y = "Number of Late Flights")
ggplot(data = merged, aes(x = factor(month), fill = late)) +
geom_bar() +
labs(title = "Number of Late Flights by Month",
x = "Month",
y = "Number of Late Flights")
avg_delay_by_month <- merged %>%
group_by(month) %>%
summarise(avg_delay = mean(dep_delay, na.rm = TRUE))
# Then, plot
ggplot(data = avg_delay_by_month, aes(x = factor(month), y = avg_delay)) +
geom_col(fill = "steelblue") +
labs(title = "Average Departure Delay by Month",
x = "Month",
y = "Average Delay (minutes)")
merged <- merged %>%
mutate(
summer = month %in% c(6, 7, 8)
)
merged <- merged %>%
mutate(
summerLabel = ifelse(month %in% c(6, 7, 8), "Summer Months", "Other Months"
)
ggplot(data = merged, aes(x = factor(month), fill = late)) +
geom_bar() +
labs(title = "Number of Late Flights by Month",
x = "Month",
y = "Number of Late Flights")
merged %>%
mutate(dep_delay_adj =ifelse(dep_delay > 0, dep_delay, 0))  #adjust dep_delay to 0
avg_delay_by_month <- merged %>%
group_by(month) %>%
summarise(avg_delay = mean(dep_delay_adj, na.rm = TRUE))
merged <- merged %>%
mutate(dep_delay_adj =ifelse(dep_delay > 0, dep_delay, 0))  #adjust dep_delay to 0
avg_delay_by_month <- merged %>%
group_by(month) %>%
summarise(avg_delay = mean(dep_delay_adj, na.rm = TRUE))
# Then, plot
ggplot(data = avg_delay_by_month, aes(x = factor(month), y = avg_delay)) +
geom_col(fill = "steelblue") +
labs(title = "Average Departure Delay by Month",
x = "Month",
y = "Average Delay (minutes)")
merged <- merged %>%
mutate(
summerLabel = ifelse(month %in% c(6, 7, 8), "Summer Months", "Other Months"
)
merged <- merged %>%
mutate(summerLabel = ifelse(month %in% c(6, 7, 8), "Summer Months", "Other Months"))
avg_delay_by_summer_and_other <- merged %>%
group_by(summerLabel) %>%
summarise(avg_delay = mean(dep_delay_adj, na.rm = TRUE))
ggplot(data = avg_delay_by_summer_and_other, aes(x = summer, y = avg_delay, fill = summerLabel)) +
geom_col() +
labs(title = "Average Delay: Summer vs. Other Months",
x = "Summer (TRUE)",
y = "Average Departure Delay (minutes)")
avg_delay_by_summer_and_other <- merged %>%
group_by(summerLabel) %>%
summarise(avg_delay = mean(dep_delay_adj, na.rm = TRUE))
ggplot(data = avg_delay_by_summer_and_other, aes(x = summerLabel, y = avg_delay, fill = summerLabel)) +
geom_col() +
labs(title = "Average Delay: Summer vs. Other Months",
x = "Summer (TRUE)",
y = "Average Departure Delay (minutes)")
avg_delay_by_summer_and_other <- merged %>%
group_by(summerLabel) %>%
summarise(avg_delay = mean(dep_delay_adj, na.rm = TRUE))
ggplot(data = avg_delay_by_summer_and_other, aes(x = summerLabel, y = avg_delay, fill = summerLabel)) +
geom_col() +
labs(title = "Average Delay: Summer vs. Other Months",
x = "Time of Year",
y = "Average Departure Delay (minutes)")
# Hypothesis
# h.0 = flight_delays.summer == flight_delays.other  (no difference between carrier delays)
# h.alt = flight_delays.winter != flight_delays.other
group1 <- merged$dep_delay_adj[merged$summerLabel == "Summer Months"]
group2 <- merged$dep_delay_adj[merged$summerLabel != "Summer Months"]
pvalue <- perm_test(group1,group2)
if (pvalue < 0.05) {
cat("The p-value is", format(pvalue, scientific = FALSE),
"- Since this is below 0.05, we reject the null hypothesis.\n")
} else {
cat("The p-value is", format(pvalue, scientific = FALSE),
"- Since this is above 0.05, we fail to reject the null hypothesis.\n")
}
merged <- merged %>%
mutate(summerLabel = ifelse(month %in% c(6, 7, 8), "Summer Months", "Other Months"))
merged <- merged %>%
mutate(summerLabel = ifelse(month %in% c(6, 7, 8), "Summer Months", "Other Months"))
avg_delay_by_summer_and_other <- merged %>%
group_by(summerLabel) %>%
summarise(avg_delay = mean(dep_delay_adj, na.rm = TRUE))
ggplot(data = avg_delay_by_summer_and_other, aes(x = summerLabel, y = avg_delay, fill = summerLabel)) +
geom_col() +
labs(title = "Average Delay: Summer vs. Other Months",
x = "Time of Year",
y = "Average Departure Delay (minutes)")
perm_test <- function(group_one,group_two,n_perm = 10^4-1){
#two sided perm test calcuation
#group1, group2: Numeric vectors for the two groups
#n_perm: Number of permutation iterations
#observed mean difference
observed <- mean(group_one) - mean(group_two)
groups_combined <- c(group_one,group_two)
#sample.size = the number of observations in our sample
sample.size <- length(groups_combined)
#group.1.size = the number of observations in the first group
group.1.size = length(group_one)
#create a blank vector to store the simulation results
result <- numeric(n_perm)
#use a for loop to cycle through values of i ranging from 1 to N
for(i in 1:n_perm)
{
index <- sample(sample.size, size=group.1.size, replace = FALSE)
result[i] <- mean(groups_combined[index]) -
mean(groups_combined[-index])
}
```{r}
perm_test <- function(group_one,group_two,n_perm = 10^4-1){
#two sided perm test calcuation
#group1, group2: Numeric vectors for the two groups
#n_perm: Number of permutation iterations
#observed mean difference
observed <- mean(group_one) - mean(group_two)
groups_combined <- c(group_one,group_two)
#sample.size = the number of observations in our sample
sample.size <- length(groups_combined)
#group.1.size = the number of observations in the first group
group.1.size = length(group_one)
#create a blank vector to store the simulation results
result <- numeric(n_perm)
#use a for loop to cycle through values of i ranging from 1 to N
for(i in 1:n_perm)
{
index <- sample(sample.size, size=group.1.size, replace = FALSE)
result[i] <- mean(groups_combined[index]) -
mean(groups_combined[-index])
}
}
```{r}
perm_test <- function(group_one,group_two,n_perm = 10^4-1){
#two sided perm test calcuation
#group1, group2: Numeric vectors for the two groups
#n_perm: Number of permutation iterations
#observed mean difference
observed <- mean(group_one) - mean(group_two)
groups_combined <- c(group_one,group_two)
#sample.size = the number of observations in our sample
sample.size <- length(groups_combined)
#group.1.size = the number of observations in the first group
group.1.size = length(group_one)
#create a blank vector to store the simulation results
result <- numeric(n_perm)
#use a for loop to cycle through values of i ranging from 1 to N
for(i in 1:n_perm)
{
index <- sample(sample.size, size=group.1.size, replace = FALSE)
result[i] <- mean(groups_combined[index]) -
mean(groups_combined[-index])
}
p_value <- (sum(abs(result) >= abs(observed)) + 1) / (N + 1)
return (p_value)
}
library(dplyr)
library(ggplot2)
library(nycflights13)
library(readr)
library(curl)
library(tidyr)
library(fivethirtyeight)
library(tidyverse)
library(resampledata3)
library(moderndive)
library(readxl)
perm_test <- function(group_one,group_two,n_perm = 10^4-1){
#two sided perm test calcuation
#group1, group2: Numeric vectors for the two groups
#n_perm: Number of permutation iterations
#observed mean difference
observed <- mean(group_one) - mean(group_two)
groups_combined <- c(group_one,group_two)
#sample.size = the number of observations in our sample
sample.size <- length(groups_combined)
#group.1.size = the number of observations in the first group
group.1.size = length(group_one)
#create a blank vector to store the simulation results
result <- numeric(n_perm)
#use a for loop to cycle through values of i ranging from 1 to N
for(i in 1:n_perm)
{
index <- sample(sample.size, size=group.1.size, replace = FALSE)
result[i] <- mean(groups_combined[index]) -
mean(groups_combined[-index])
}
p_value <- (sum(abs(result) >= abs(observed)) + 1) / (N + 1)
return (p_value)
}
avg_delay_by_summer_and_other <- merged %>%
group_by(summerLabel) %>%
summarise(avg_delay = mean(dep_delay_adj, na.rm = TRUE))
ggplot(data = avg_delay_by_summer_and_other, aes(x = summerLabel, y = avg_delay, fill = summerLabel)) +
geom_col() +
labs(title = "Average Delay: Summer vs. Other Months",
x = "Time of Year",
y = "Average Departure Delay (minutes)")
# Hypothesis
# h.0 = flight_delays.summer == flight_delays.other  (no difference between carrier delays)
# h.alt = flight_delays.winter != flight_delays.other
group1 <- merged_timeofyear_clean$dep_delay[merged_timeofyear_clean$summer == TRUE]
group2 <- merged_timeofyear_clean$dep_delay[merged_timeofyear_clean$summer == FALSE]
pvalue <- perm_test(group1,group2)
if (pvalue < 0.05) {
cat("The p-value is", format(pvalue, scientific = FALSE),
"- Since this is below 0.05, we reject the null hypothesis.\n")
} else {
cat("The p-value is", format(pvalue, scientific = FALSE),
"- Since this is above 0.05, we fail to reject the null hypothesis.\n")
}
# Hypothesis
# h.0 = flight_delays.summer == flight_delays.other  (no difference between carrier delays)
# h.alt = flight_delays.winter != flight_delays.other
group1 <- merged_timeofyear_clean$dep_delay[merged_timeofyear_clean$summerLabel == "Summer Months"]
group2 <- merged_timeofyear_clean$dep_delay[merged_timeofyear_clean$summerLabel != "Summer Months"]
pvalue <- perm_test(group1,group2)
if (pvalue < 0.05) {
cat("The p-value is", format(pvalue, scientific = FALSE),
"- Since this is below 0.05, we reject the null hypothesis.\n")
} else {
cat("The p-value is", format(pvalue, scientific = FALSE),
"- Since this is above 0.05, we fail to reject the null hypothesis.\n")
}
ggplot(data = merged, aes(x = factor(month), fill = late)) +
geom_bar() +
labs(title = "Number of Late Flights by Month",
x = "Month",
y = "Number of Late Flights")
merged <- merged %>%
mutate(dep_delay_adj =ifelse(dep_delay > 0, dep_delay, 0))  #adjust dep_delay to 0
avg_delay_by_month <- merged %>%
group_by(month) %>%
summarise(avg_delay = mean(dep_delay_adj, na.rm = TRUE))
# Then, plot
ggplot(data = avg_delay_by_month, aes(x = factor(month), y = avg_delay)) +
geom_col(fill = "steelblue") +
labs(title = "Average Departure Delay by Month",
x = "Month",
y = "Average Delay (minutes)")
merged <- merged %>%
mutate(summerLabel = ifelse(month %in% c(6, 7, 8), "Summer Months", "Other Months"))
merged <- merged %>%
mutate(summerLabel = ifelse(month %in% c(6, 7, 8), "Summer Months", "Other Months"))
avg_delay_by_summer_and_other <- merged %>%
group_by(summerLabel) %>%
summarise(avg_delay = mean(dep_delay_adj, na.rm = TRUE))
ggplot(data = avg_delay_by_summer_and_other, aes(x = summerLabel, y = avg_delay, fill = summerLabel)) +
geom_col() +
labs(title = "Average Delay: Summer vs. Other Months",
x = "Time of Year",
y = "Average Departure Delay (minutes)")
# Hypothesis
# h.0 = flight_delays.summer == flight_delays.other  (no difference between carrier delays)
# h.alt = flight_delays.winter != flight_delays.other
group1 <- merged_timeofyear_clean$dep_delay[merged_timeofyear_clean$summerLabel == "Summer Months"]
group2 <- merged_timeofyear_clean$dep_delay[merged_timeofyear_clean$summerLabel != "Summer Months"]
pvalue <- perm_test(group1,group2)
if (pvalue < 0.05) {
cat("The p-value is", format(pvalue, scientific = FALSE),
"- Since this is below 0.05, we reject the null hypothesis.\n")
} else {
cat("The p-value is", format(pvalue, scientific = FALSE),
"- Since this is above 0.05, we fail to reject the null hypothesis.\n")
}
# Hypothesis
# h.0 = flight_delays.summer == flight_delays.other  (no difference between carrier delays)
# h.alt = flight_delays.winter != flight_delays.other
group1 <- merged_timeofyear_clean$dep_delay[merged$summerLabel == "Summer Months"]
group2 <- merged_timeofyear_clean$dep_delay[merged$summerLabel != "Summer Months"]
pvalue <- perm_test(group1,group2)
if (pvalue < 0.05) {
cat("The p-value is", format(pvalue, scientific = FALSE),
"- Since this is below 0.05, we reject the null hypothesis.\n")
} else {
cat("The p-value is", format(pvalue, scientific = FALSE),
"- Since this is above 0.05, we fail to reject the null hypothesis.\n")
}
